<Project Sdk="Microsoft.NET.Sdk">
    <Import Project="Version.props"/>

    <PropertyGroup>
        <OutputType>Exe</OutputType>
        <TargetFramework>net9.0</TargetFramework>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <LangVersion>13</LangVersion>
        <AssemblyName>gdvm</AssemblyName>
        <Authors>Patrick T Coakley</Authors>
        <PackageProjectUrl>https://github.com/patricktcoakley/gdvm</PackageProjectUrl>
        <PackageLicenseUrl>https://github.com/patricktcoakley/GDVM/blob/main/LICENSE</PackageLicenseUrl>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)' == 'Release'">
        <PublishAot>true</PublishAot>
        <SelfContained>true</SelfContained>
        <EnableCompressionInSingleFile>true</EnableCompressionInSingleFile>
        <StripSymbols>true</StripSymbols>
        <PublishTrimmed>true</PublishTrimmed>
        <TrimMode>full</TrimMode>
        <InvariantGlobalization>true</InvariantGlobalization>
        <IlcOptimizationPreference>Size</IlcOptimizationPreference>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
        <SelfContained>true</SelfContained>
        <PublishSingleFile>true</PublishSingleFile>
    </PropertyGroup>

    <PropertyGroup>
        <MinVerTagPrefix>v</MinVerTagPrefix>
        <MinVerVerbosity>diagnostic</MinVerVerbosity>
        <IsGitRepository>true</IsGitRepository>
    </PropertyGroup>

    <Target Name="UseFallbackVersionIfNotGit" BeforeTargets="BeforeBuild">
        <Exec Command="git rev-parse --is-inside-work-tree" IgnoreExitCode="true">
            <Output TaskParameter="ExitCode" PropertyName="GitExitCode"/>
        </Exec>
        <PropertyGroup>
            <IsGitRepository Condition="'$(GitExitCode)' != '0'">false</IsGitRepository>
            <MinVerVersionOverride Condition="'$(IsGitRepository)' == 'false'">$(MinVerFallbackVersion)</MinVerVersionOverride>
        </PropertyGroup>
        <Message Condition="'$(IsGitRepository)' == 'false'" Text="IsGitRepository=$(IsGitRepository), using $(MinVerVersionOverride)" Importance="high"/>
        <PropertyGroup>

        </PropertyGroup>
    </Target>

    <Target Name="UpdateVersionProps" AfterTargets="Build"
            Condition="'$(IsGitRepository)' == 'true'">
        <PropertyGroup>
            <MinVerCalculatedVersion>$(MinVerMajor).$(MinVerMinor).$(MinVerPatch)</MinVerCalculatedVersion>
        </PropertyGroup>
        <Message Text="Updating MinVerFallbackVersion to $(MinVerCalculatedVersion)"
                 Importance="high"/>
        <XmlPoke XmlInputPath="Version.props"
                 Query="//PropertyGroup/MinVerFallbackVersion"
                 Value="$(MinVerCalculatedVersion)"/>
    </Target>

    <ItemGroup>
        <PackageReference Include="ConsoleAppFramework" Version="5.4.1">
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.Extensions.Configuration" Version="9.0.6" />
        <PackageReference Include="Microsoft.Extensions.Configuration.Ini" Version="9.0.6" />
        <PackageReference Include="MinVer" Version="6.0.0">
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>
        <PackageReference Include="Spectre.Console" Version="0.50.0" />
        <PackageReference Include="ZLogger" Version="2.5.10"/>
    </ItemGroup>

    <ItemGroup>
        <InternalsVisibleTo Include="GDVM.Tests"/>
    </ItemGroup>

</Project>
